{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/util/config.js","webpack:///./src/main/util/env.js","webpack:///./src/main/window.js","webpack:///./src/main/index.js","webpack:///external \"electron\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","config","request","localhost","url","port","directory","resources","index","env","process","Env","[object Object]","win","resourcesDirectory","constructor","resDir","this","ResourcesDirectory","assign","Config","indexDirectory","getIndex","isDev","getUrl","ElectronWindow","instance","main","_InitBaseEnvironment","app","on","_CreateWindow","platform","quit","indexUrl","BrowserWindow","width","height","webPreferences","nodeIntegration","loadURL","webContents","openDevTools","getInstance","require"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/index.js\");\n","export default {\r\n    request: 'http://jangred.cn',\r\n    localhost: {\r\n        url: 'localhost',\r\n        port: '8080'\r\n    },\r\n    directory: {\r\n        resources: 'dist/electron-build/',\r\n        index: {\r\n            name: 'index.html',\r\n            url: 'dist/electron-build/'\r\n        }\r\n    }\r\n}","import Config from './config'\r\n\r\nconst env = process.env.NODE_ENV ? process.env.NODE_ENV : 'production'\r\n\r\nexport class Env {\r\n    static getEnv() {\r\n        return env\r\n    }\r\n\r\n    static isDev() {\r\n        return env === 'development'\r\n    }\r\n\r\n    static isProd() {\r\n        return env === 'production'\r\n    }\r\n}\r\n\r\nexport class ResourcesDirectory {\r\n    constructor(resDir = {}) {\r\n        this.ResourcesDirectory = Object.assign(resDir, Config)\r\n        this.localhost = this.ResourcesDirectory.localhost\r\n        this.indexDirectory = this.ResourcesDirectory.directory\r\n    }\r\n\r\n    getIndex() {\r\n        if (Env.isDev) {\r\n            return this.getUrl()+'/'+this.indexDirectory.index.name\r\n        } else {\r\n            return this.indexDirectory.url+'/'+this.indexDirectory.index.name\r\n        }\r\n    }\r\n\r\n    getUrl() {\r\n        if (Env.isDev) {\r\n            return `http://${this.ResourcesDirectory.localhost.url}:${this.ResourcesDirectory.localhost.port}`\r\n        } else {\r\n            return this.ResourcesDirectory.request\r\n        }\r\n    }\r\n}","import { app, BrowserWindow } from 'electron'\r\nimport { ResourcesDirectory } from './util/env'\r\n\r\nlet win,\r\n    resourcesDirectory = new ResourcesDirectory()\r\n\r\nexport class ElectronWindow {\r\n    static getInstance() {\r\n        if (this.instance) {\r\n            return this.instance\r\n        } else {\r\n            this.instance = new ElectronWindow()\r\n            return this.instance\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this.instance = null\r\n    }\r\n\r\n    main() {\r\n        this._InitBaseEnvironment()\r\n    }\r\n\r\n    _InitBaseEnvironment() {\r\n        app.on('ready', this._CreateWindow)\r\n        app.on('window-all-closed', () => {\r\n            if (process.platform !== 'darwin') {\r\n                app.quit()\r\n            }\r\n        })\r\n        app.on('activate', () => {\r\n            if (win === null) {\r\n                this._CreateWindow()\r\n            }\r\n        })\r\n    }\r\n\r\n    _CreateWindow() {\r\n        let indexUrl = resourcesDirectory.getIndex()\r\n\r\n        win = new BrowserWindow({\r\n            width: 800,\r\n            height: 600,\r\n            webPreferences: {\r\n                nodeIntegration: true\r\n            }\r\n        })\r\n\r\n        win.loadURL(indexUrl)\r\n\r\n        win.webContents.openDevTools()\r\n        win.on('closed', () => {\r\n            win = null\r\n        })\r\n    }\r\n}","import { ElectronWindow } from './window'\r\n\r\nconst win = ElectronWindow.getInstance()\r\n\r\nwin.main()","module.exports = require(\"electron\");"],"sourceRoot":""}
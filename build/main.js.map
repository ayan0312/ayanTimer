{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/main/util/env.js","webpack:///./src/shared/config.js","webpack:///./src/shared/windowStyles.js","webpack:///./src/main/mainWindow.js","webpack:///./src/main/index.js","webpack:///external \"electron\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Env","[object Object]","this","env","process","config","APP_NAME","build","productName","APP_VERSION","version","REPO_OWNER","REPO_NAME","DEBUG_PROD","UPGRADE_EXTENSIONS","START_MINIMIZED","windowStyles","WINDOW_WIDTH","WINDOW_HEIGHT","MAX_WIDTH","MAX_HEIGHT","MIN_WIDTH","MIN_HEIGHT","BACKGROUND_COLOR","_mainWindow","resourcesDirectory","constructor","port","PORT","getIndexURL","isDev","__dirname","ElectronWindow","instance","main","_InitBaseEnvironment","app","on","_CreateWindow","platform","quit","BrowserWindow","width","parseInt","height","backgroundColor","show","resizable","movable","maximizable","fullscreenable","autoHideMenuBar","titleBarStyle","frame","loadURL","webContents","openDevTools","once","Error","minimize","focus","getInstance","require"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main/index.js\");\n","export class Env {\r\n    static env = process.env.NODE_ENV ? process.env.NODE_ENV : 'production'\r\n\r\n    static getEnv() {\r\n        return this.env\r\n    }\r\n\r\n    static isDev() {\r\n        return this.env === 'development'\r\n    }\r\n\r\n    static isProd() {\r\n        return this.env === 'production'\r\n    }\r\n}\r\n\r\nexport class ResourcesDirectory {\r\n    constructor() {\r\n        this.port = process.env.PORT || 1212\r\n    }\r\n\r\n    getIndexURL() {\r\n        return Env.isDev() ? `http://localhost:${this.port}/index.html` : `file://${__dirname}/index.html`\r\n    }\r\n}","import { build, version } from '../../package.json'\n\nexport const config = {\n\tAPP_NAME: build.productName,\n\tAPP_VERSION: version,\n\tREPO_OWNER: 'ayanTimer',\n\tREPO_NAME: 'ayanTimer-desktop',\n\tDEBUG_PROD: process.env.DEBUG_PROD === 'true' || false,\n\tUPGRADE_EXTENSIONS: process.env.UPGRADE_EXTENSIONS === 'true' || false,\n\tSTART_MINIMIZED: process.env.START_MINIMIZED === 'true' || false\n}","export default {\r\n    WINDOW_WIDTH: '350px',\r\n    WINDOW_HEIGHT: '700px',\r\n    MAX_WIDTH:'750PX',\r\n    MAX_HEIGHT:'800PX',\r\n    MIN_WIDTH:'350PX',\r\n    MIN_HEIGHT:'650PX',\r\n    BACKGROUND_COLOR:\"#efefef\"\r\n}","import { app, BrowserWindow } from 'electron'\r\nimport { ResourcesDirectory, Env } from './util/env'\r\nimport { config } from '../shared/config'\r\nimport windowStyles from '../shared/windowStyles'\r\n\r\nlet _mainWindow,\r\n    resourcesDirectory = new ResourcesDirectory()\r\n\r\nexport class ElectronWindow {\r\n    static getInstance() {\r\n        if (this.instance) {\r\n            return this.instance\r\n        } else {\r\n            this.instance = new ElectronWindow()\r\n            return this.instance\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this.instance = null\r\n    }\r\n\r\n    main() {\r\n        this._InitBaseEnvironment()\r\n    }\r\n\r\n    _InitBaseEnvironment() {\r\n        app.on('ready', this._CreateWindow)\r\n        app.on('window-all-closed', () => {\r\n            if (process.platform !== 'darwin') {\r\n                app.quit()\r\n            }\r\n        })\r\n        app.on('activate', () => {\r\n            if (_mainWindow === null) {\r\n                this._CreateWindow()\r\n            }\r\n        })\r\n    }\r\n\r\n    _CreateWindow() {\r\n\r\n        _mainWindow = new BrowserWindow({\r\n            width: Env.isDev()? windowStyles.MAX_WIDTH : parseInt(windowStyles.WINDOW_WIDTH),\r\n            height: parseInt(windowStyles.WINDOW_HEIGHT),\r\n    \r\n            backgroundColor:windowStyles.BACKGROUND_COLOR,\r\n\r\n            show: false,\r\n            resizable:false,\r\n            movable:true,\r\n            maximizable:false,\r\n            fullscreenable:false,\r\n            autoHideMenuBar:true,\r\n            titleBarStyle:'hiddenInset',\r\n            frame: false\r\n\r\n        })\r\n\r\n        _mainWindow.loadURL(resourcesDirectory.getIndexURL())\r\n\r\n        if (Env.isDev()) {\r\n            _mainWindow.webContents.openDevTools()\r\n        }\r\n\r\n        _mainWindow.once('ready-to-show', () => {\r\n            if (!_mainWindow) {\r\n                throw new Error('\"mainWindow\" is not defined')\r\n            }\r\n\r\n            if (config.START_MINIMIZED === 'true') {\r\n                _mainWindow.minimize()\r\n            } else {\r\n                _mainWindow.show()\r\n                _mainWindow.focus()\r\n            }\r\n        })\r\n\r\n        _mainWindow.on('closed', () => {\r\n            _mainWindow = null\r\n        })\r\n    }\r\n}","import { ElectronWindow } from './mainWindow'\r\n\r\nconst win = ElectronWindow.getInstance()\r\n\r\nwin.main()","module.exports = require(\"electron\");"],"sourceRoot":""}